package com.bookbuddy.bookbuddy.Entities;

import java.math.BigDecimal;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

@Entity
@Schema(name = "cart_items", description = "items present in the cart")
@Table(name = "cart_items")
public class CartItem {

	@Id
	@Column(name = "cart_item_id")
	@Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Unique ID generated by database corresponding to a user", example = "1")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long cartItemId;

	@ManyToOne
	@Schema(name = "cart_id", description = "id of the cart")
	@JoinColumn(name = "cart_id")
	private Cart cart;
	

	@ManyToOne
	@Schema(name = "book_id", description = "id of the book")
	@JoinColumn(name = "book_id")
	private Book book;
	
	
	@Schema(name = "quantity", description = "number of items present in the cart")
	@Column(name = "quantity")
	private int quantity;

	@Schema(name = "item_price", description = "price of the item")
	@Column(name = "item_price")
	private BigDecimal itemPrice;
	

	public Long getCartItemId() {
		return cartItemId;
	}

	public void setCartItemId(Long cartItemId) {
		this.cartItemId = cartItemId;
	}

	public Cart getCart() {
		return cart;
	}

	public void setCart(Cart cart) {
		this.cart = cart;
	}

	public Book getBook() {
		return book;
	}

	public void setBook(Book book) {
		this.book = book;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public BigDecimal getItemPrice() {
		return itemPrice;
	}

	public void setItemPrice(BigDecimal itemPrice) {
		this.itemPrice = itemPrice;
	}

	public CartItem(Long cartItemId, Cart cart, Book book, int quantity, BigDecimal itemPrice) {
		super();
		this.cartItemId = cartItemId;
		this.cart = cart;
		this.book = book;
		this.quantity = quantity;
		this.itemPrice = itemPrice;
	}

	public CartItem() {

	}
	
	


}