package com.bookbuddy.bookbuddy.Entities;

import java.math.BigDecimal;
import java.util.List;

import io.swagger.v3.oas.annotations.media.Schema;

//This is the OrderDTO class. It is a Data Transfer Object (DTO) that is used to send order information back to the client.
//It has the order ID, user ID, list of items in the order, and the total price of all items in the order.
//This main difference between this class and the Order class is that this class does not have a reference to the User entity, only the user ID.
//Jimmy Karoly

@Schema(name = "OrderDTO", description = "Data Transfer Object for Order")
public class OrderDTO {

    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Unique ID generated by database corresponding to an order", example = "1")
    private Long orderId;

    @Schema(description = "Unique ID generated by database corresponding to a user", example = "1")
    private Long userId;

    @Schema(description = "List of items in the order")
    private List<OrderItem> items;

    @Schema(description = "Total price of all items in the order", example = "58.23")
    private BigDecimal totalPrice;

    public static OrderDTO fromEntity(Order order){
        OrderDTO orderDTO = new OrderDTO();
        orderDTO.setOrderId(order.getOrderId());
        orderDTO.setUserId(order.getUser().getId());
        orderDTO.setItems(order.getOrderItems());
        orderDTO.setTotalPrice(order.getTotalPrice());
        return orderDTO;
    }

    public Long getOrderId() {
        return orderId;
    }

    public void setOrderId(Long orderId) {
        this.orderId = orderId;
    }

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public BigDecimal getTotalPrice() {
        return totalPrice;
    }

    public void setTotalPrice(BigDecimal totalPrice) {
        this.totalPrice = totalPrice;
    }

    public List<OrderItem> getItems() {
        return items;
    }

    public void setItems(List<OrderItem> items) {
        this.items = items;
    }


}
